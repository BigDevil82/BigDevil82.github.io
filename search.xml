<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>About Me</title>
      <link href="/2021/10/04/About-Me/"/>
      <url>/2021/10/04/About-Me/</url>
      
        <content type="html"><![CDATA[<h1 id="About-Me"><a href="#About-Me" class="headerlink" title="About Me"></a>About Me</h1><p>本科毕业于华中科技大学土木工程专业，目前就读于同济大学防灾减灾工程方向。</p><p>学的是土木，爱的是编程。</p><p>虽然菜的一批，但却乐此不疲。</p><p>梦想是有个几幢楼能让我躺着收租，爱干啥干啥。</p><p>贴张好看的图以免显得单调:sweat_smile:</p><p><div class="img-item" data-src="https://i.loli.net/2021/10/04/4DmwY1UWN2BX3Mr.png" data-sub-html=".caption"><img src="https://i.loli.net/2021/10/04/4DmwY1UWN2BX3Mr.png" alt="test"><div class="img-caption d-block text-center"><span class="center-caption text-muted border-bottom">test</span></div></div></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建博客详解</title>
      <link href="/2021/10/04/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/"/>
      <url>/2021/10/04/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h2 id="hexo搭建个人博客"><a href="#hexo搭建个人博客" class="headerlink" title="hexo搭建个人博客"></a>hexo搭建个人博客</h2><h3 id="1-安装及基础配置"><a href="#1-安装及基础配置" class="headerlink" title="1. 安装及基础配置"></a>1. 安装及基础配置</h3><ol><li>安装nodejs（<a href="https://nodejs.dev/download">下载地址</a>）</li><li>安装Git （<a href="https://git-scm.com/downloads">下载地址</a>）</li><li>安装hexo并运行：在某个文件夹下打开cmd窗口执行以下命令<ul><li>安装：     <code>npm install -g hexo-cli</code></li><li>初始化： <code>hexo init [folder] </code>  在指定目录或当前工作目录下生成一些必要的文件</li><li>生成：     <code>hexo g</code> ，如果上一步指定了folder先切换一下工作目录 <code>cd folder</code></li><li>运行：     <code>hexo s</code> ，访问 <code>http://localhost:4000</code> 即可访问默认主题下的博客页面</li></ul></li><li>利用Pages功能部署到GitHub上，以便能够让其他人访问你的博客</li></ol><hr><h3 id="2-GitHub部署"><a href="#2-GitHub部署" class="headerlink" title="2. GitHub部署"></a>2. GitHub部署</h3><ol><li><p>创建一个GitHub仓库，仓库名一定要是   <strong>账户名.github.io</strong></p></li><li><p>开通Pages服务，在仓库设置项中<div class="img-item" data-src="https://i.loli.net/2021/10/04/gfNldJY3suhOaj2.png" data-sub-html=".caption"><img src="https://i.loli.net/2021/10/04/gfNldJY3suhOaj2.png" alt="image-20211004175633253"><div class="img-caption d-block text-center"><span class="center-caption text-muted border-bottom">image-20211004175633253</span></div></div></p></li><li><p>安装git部署插件</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure></li><li><p>填写站点**_config.yml** 配置文件中最后deploy属性部分如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">你的仓库访问地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master(可能是main,视具体情况而定)</span></span><br></pre></td></tr></table></figure></li><li><p>运行命令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g &amp; hexo d</span><br></pre></td></tr></table></figure><p>上面命令就是先生成然后上传public文件夹内的文件到你的仓库</p></li><li><p>从page网址就可以进入你的博客了。</p></li></ol><hr><h3 id="3-基础配置文件说明"><a href="#3-基础配置文件说明" class="headerlink" title="3. 基础配置文件说明"></a>3. 基础配置文件说明</h3><ol><li><strong>public</strong>文件夹，里面是博客网站所需要的所有静态文件，当每次用 <code>hexo g</code> 命令之后就会生成网站所需要的文件，其中的index.html就是网站入口（主页）；</li><li><strong>scaffolds</strong>文件夹，里面是创建博客，标签，分类等文件夹所用到的模板<ul><li><code>hexo new post blog1</code></li><li><code>hexo new tags tags</code></li><li><code>hexo new categories categories</code></li></ul></li><li><strong>source</strong>文件夹，就是存放博客，标签，分类元数据等内容的</li><li><strong>themes</strong>主题文件夹，将网上找的主题放里面，在_config.yml文件中修改主题为对应主题文件夹的名字即可应用该主题</li><li><strong>_config.yml</strong>站点配置文件，在里面设置各种与网站相关的属性，具体见<a href="https://hexo.io/docs/configuration">官网</a></li><li><strong>packages.json</strong>安转的一些nodejs包，不用管。</li></ol><hr><h3 id="4-运用主题"><a href="#4-运用主题" class="headerlink" title="4. 运用主题"></a>4. 运用主题</h3><p>这里值得说明的是，官方给出的主题库中很多主题其实是存在问题的，而自己可能在使用过程中出现问题又不知道怎么去修改，所以找一个比较火的主题其实是比较推荐的（比如<a href="https://github.com/theme-next/hexo-theme-next">next</a>)。我自己选了个比较符合自己喜好的主题，但是应用的过程中踩了很多坑，这里记录一下，供大家参考借鉴，未必适用你的主题。</p><p><strong>我选用的是<a href="https://github.com/luswdev/hexo-theme-clean">clean</a>主题</strong>，比较简洁干净的一个主题，若需要使用请先阅读官方装上一些必备的包。</p><h4 id="4-1-bugs-fix"><a href="#4-1-bugs-fix" class="headerlink" title="4.1 bugs fix"></a>4.1 bugs fix</h4><p>首先修复一下主题文件中几个bug，博客最下面<em>上一页</em>和<em>下一页</em>的位置反了，找到以下文件：</p><ol><li> <code>..\MyBlog\themes\clean\layout\_partial\pagination.ejs</code>，正确代码如下：</li></ol>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;pagination d-block text-center&quot;&gt;</span><br><span class="line">  &lt;% if (page.prev)&#123; %&gt;</span><br><span class="line">  &lt;li class=&quot;previous page-item d-inline&quot;&gt;</span><br><span class="line">    &lt;a</span><br><span class="line">      href=&quot;&lt;%- config.root %&gt;&lt;%- page.prev_link %&gt;&quot;</span><br><span class="line">      class=&quot;page-link float-left&quot;</span><br><span class="line">      &gt;&amp;larr; &lt;%- __(&#x27;prev&#x27;)%&gt;&lt;/a</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;% &#125; %&gt; &lt;% if (page.next)&#123; %&gt;</span><br><span class="line">  &lt;li class=&quot;next page-item d-inline&quot;&gt;</span><br><span class="line">    &lt;a</span><br><span class="line">      href=&quot;&lt;%- config.root %&gt;&lt;%- page.next_link %&gt;&quot;</span><br><span class="line">      class=&quot;page-link float-right&quot;</span><br><span class="line">      &gt;&lt;%- __(&#x27;next&#x27;)%&gt; &amp;rarr;&lt;/a</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li> <code>..\MyBlog\themes\clean\layout\_partial\post\post-footer.ejs</code>, 正确代码如下：</li></ol>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (page.prev || page.next) &#123; %&gt;</span><br><span class="line">&lt;div class=&quot;col-lg-8 offset-lg-2 col-md-10 offset-md-1&quot;&gt;</span><br><span class="line">  &lt;ul class=&quot;pagination d-block text-center&quot;&gt;</span><br><span class="line">    &lt;% if (page.prev)&#123; %&gt;</span><br><span class="line">    &lt;li class=&quot;previous page-item d-inline&quot;&gt;</span><br><span class="line">      &lt;a href=&quot;&lt;%- url_for(page.prev.path) %&gt;&quot; class=&quot;page-link float-left&quot;</span><br><span class="line">        &gt;&amp;larr; &lt;%- __(&#x27;prev&#x27;)%&gt;&lt;/a</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;% &#125; %&gt; &lt;% if (page.next)&#123; %&gt;</span><br><span class="line">    &lt;li class=&quot;next page-item d-inline&quot;&gt;</span><br><span class="line">      &lt;a href=&quot;&lt;%- url_for(page.next.path) %&gt;&quot; class=&quot;page-link float-right&quot;</span><br><span class="line">        &gt;&lt;%- __(&#x27;next&#x27;)%&gt; &amp;rarr;&lt;/a</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><h4 id="4-2-使用gitalk添加评论功能"><a href="#4-2-使用gitalk添加评论功能" class="headerlink" title="4.2 使用gitalk添加评论功能"></a>4.2 使用gitalk添加评论功能</h4><ol><li><p>注册GitHub上的OAuth应用，<a href="https://github.com/settings/applications/new">链接</a></p><ul><li>应用程序名随意填</li><li>homepageURL是你的博客网页地址，也就是上面的GitHubPages得到的地址</li><li>Authorization callback URL同上</li></ul></li><li><p>在你的<strong>主题配置文件</strong>中找到配置gitalk相关的部分，一般需要填入以下内容，也就是上述步骤得到的一些参数，accessToken也是在OAuth下的一个tab中生成的(<a href="https://github.com/settings/tokens">访问地址</a>)：</p><p><div class="img-item" data-src="https://i.loli.net/2021/10/04/R8CiTwAPyJ2tGvI.png" data-sub-html=".caption"><img src="https://i.loli.net/2021/10/04/R8CiTwAPyJ2tGvI.png" alt="image-20211004180304395"><div class="img-caption d-block text-center"><span class="center-caption text-muted border-bottom">image-20211004180304395</span></div></div></p></li><li><p>注意上面的repo项填的只是你的<strong>仓库名</strong>，而不是仓库的整个访问地址，这个是用来放评论的仓库，可以直接用上面<a href="#GitHub%E9%83%A8%E7%BD%B2">步骤1</a>中创建的那个托管博客网页的仓库，也可以另外建个仓库，owner和admin就是你的<strong>用户名</strong>（一定不要填错，直接复制粘贴最保险，我就是admin漏了个字母找了超级久bug，填错在评论区会出现error not found 的错误）。</p></li></ol><p>完成以上步骤后就可以重新生成然后部署到网站上了。</p><p>以下几个是修改完一些内容后进行生成和部署的命令，比较常用：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="comment"># 删掉public文件夹，清理</span></span><br><span class="line">hexo g     <span class="comment"># 重新生成public内的文件</span></span><br><span class="line">hexo d     <span class="comment"># 部署到GitHub上</span></span><br></pre></td></tr></table></figure><p>部署完就可以打开你的博客看看效果了，第一次应该是要先让你用GitHub登录一下，然后就能开启评论功能了，貌似每篇博客都得你自己先登一下，不过也就一键点击的事。<div class="img-item" data-src="https://i.loli.net/2021/10/04/fD1NBOjGzCuUr27.png" data-sub-html=".caption"><img src="https://i.loli.net/2021/10/04/fD1NBOjGzCuUr27.png" alt="image-20211004183241428"><div class="img-caption d-block text-center"><span class="center-caption text-muted border-bottom">image-20211004183241428</span></div></div></p><hr><h4 id="4-3-标签页-分类页-关于我等页面制作"><a href="#4-3-标签页-分类页-关于我等页面制作" class="headerlink" title="4.3 标签页 分类页 关于我等页面制作"></a>4.3 标签页 分类页 关于我等页面制作</h4><p>这里以tags页面创建为例，说明这一类页面怎么支座生成。</p><p>输入以下命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags tags</span><br></pre></td></tr></table></figure><p>会在source文件夹下生成一下tags文件夹，里面有一个index.md文件，类似：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2021-10-04 14:10:47</span><br><span class="line">type: tags</span><br><span class="line"><span class="section">layout: tags</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>title可以自己改，type填tags，最后一项layout很重要，我这个主题没有这一项就无法显示标签页，也是网上找了很久的解决方案才知道的。可能有点主题不需要，如果有问题就加上试试。这一项的内容，根据你主题文件夹下用于控制便签页布局的文件名而定，比如我的主题中是这样的：</p><p><div class="img-item" data-src="https://i.loli.net/2021/10/04/gb2mqoFsZ8O4TxW.png" data-sub-html=".caption"><img src="https://i.loli.net/2021/10/04/gb2mqoFsZ8O4TxW.png" alt="image-20211004195417858"><div class="img-caption d-block text-center"><span class="center-caption text-muted border-bottom">image-20211004195417858</span></div></div></p><p>那就填上tags，配置完保存即可。</p><p>然后在 source/_posts文件夹下，也就是存放博客内容的地方，对某一篇推文添加标签：</p><p><div class="img-item" data-src="https://i.loli.net/2021/10/04/sHcFiajYoIkMmfZ.png" data-sub-html=".caption"><img src="https://i.loli.net/2021/10/04/sHcFiajYoIkMmfZ.png" alt="image-20211004195807995"><div class="img-caption d-block text-center"><span class="center-caption text-muted border-bottom">image-20211004195807995</span></div></div></p><p>上面展示的是一篇博客(.md文档)的头部信息，以上下三根短线 — 为开头结尾，说明一些博客基本信息，最终不会渲染出来，就像HTML文档的head部分。添加上tags这个属性，每个标签以 <strong>- tag</strong> 的格式书写，注意中间有空格，不然不能正确识别。保存后，标签页就算完成了，重新生成部署一下hexo，打开网站就能见到如下的标签搜索页：</p><p><div class="img-item" data-src="https://i.loli.net/2021/10/04/5zdAryegVpj1mhE.png" data-sub-html=".caption"><img src="https://i.loli.net/2021/10/04/5zdAryegVpj1mhE.png" alt="image-20211004200523205"><div class="img-caption d-block text-center"><span class="center-caption text-muted border-bottom">image-20211004200523205</span></div></div></p><p>分类页同理制作。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DeepLearning 学习笔记</title>
      <link href="/2021/10/04/%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
      <url>/2021/10/04/%E7%AC%AC%E4%B8%80%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><h4 id="1-Sigmoid-neurons"><a href="#1-Sigmoid-neurons" class="headerlink" title="1. Sigmoid neurons"></a>1. <a href="http://neuralnetworksanddeeplearning.com/chap1.html#sigmoid_neurons">Sigmoid neurons</a></h4><p>该激活函数的特点是变化平缓，输入的微小改变不至于导致输出结果的巨大变化，这样才能让神经网络更好的学习，也能更好的适应于新的数据输入（从已有的外推新的时不会造成造成认知的巨大变化，已有的经验才能适用，有点像 A 学会一题解法，但是条件变一下就不会了，而 B 却能举一反三，这里就是希望算法具备 B 的特质），使算法具备更高的鲁棒性。</p><p><img src="image/image.png"></p><p><img src="image/image_1.png"></p><p><img src="image/image_2.png"></p><h4 id="2-cost-function"><a href="#2-cost-function" class="headerlink" title="2. cost function"></a>2. cost function</h4><p><img src="image/image_3.png"></p><p>上式中 x 是输入向量，y 是对应于该输入的准确解向量，a 是对应于 x 的神经网络计算值；本质上 C 是关于 w, b 的一个函数，我们需要找到一组 w,b 值，是的对于任意输入的 x 向量，C 的值会很小，也就是预测值与真实值接近。而这是通过找到对于训练集（一个 x 的集合）所有 x 都能达到较好的估计效果的一组 w,x 来实现的。通过训练，让程序针对这一类问题掌握某种规律，从何应对从未接触过的新的同类问题。</p><p>解决上述问题的关键归结到找 C 函数的最小值，此处用到了梯度下降法</p><h4 id="gradient-descent"><a href="#gradient-descent" class="headerlink" title="gradient descent"></a>gradient descent</h4><p><img src="image/image_4.png"></p><p><img src="image/image_5.png"></p><p><img src="image/image_6.png"></p><p><img src="image/image_7.png"></p><p><img src="image/image_8.png"></p><p>大致总结为：</p><ul><li><p>计算 C 关于各个自变量的偏导；</p></li><li><p>取各变量的增量为一个系数（eta）乘上前面求得的偏导再去相反数，如此 C 的变化肯定是负数了，也就是下降了；这里 η 的选取是很重要的，因为这关系到第一个式子是否成了，也就是 C 能不能真的减小；</p></li><li><p>由此可以计算出一个新的 V 向量，也就朝“山坡”向下迈了一步，然后在这一个新的位置，继续上述过程，直到找到一个最低点。</p></li></ul><h4 id="stochastic-gradient-descent"><a href="#stochastic-gradient-descent" class="headerlink" title="stochastic gradient descent"></a>stochastic gradient descent</h4><p><img src="image/image_9.png"></p><p><img src="image/image_10.png"></p><p>由于需要找到的时一组对于所有 x 输入都比较适用的 w,b 值，因此需要考虑对于每个 x 输入求得一个梯度下降系数之后取个均值，但是这样未免太慢了点，不如把输入集分成很多同样大小的小集合，对一个小集合算出一个上述的均值梯度系数，算完后可以得到一组新的 w,b 值，也就是新起点；再在此基础上对下一个小集合继续算均值梯度系数，这样迭代下去，慢慢更新 w,b 值，直至算完所有小集合。</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 人工智能 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
